-- USER INFO
CREATE TABLE IF NOT EXISTS users(
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    nickname VARCHAR(32) UNIQUE NOT NULL,
    email VARCHAR(320) UNIQUE NOT NULL,
    hashed_password CHAR(60) NOT NULL
);

-- POSTS
CREATE TABLE IF NOT EXISTS posts(
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    title NVARCHAR(100) NOT NULL CHECK(LENGTH(title)<=100),
    content TEXT NOT NULL,
    created TEXT NOT NULL,
    userid INTEGER NOT NULL,
    FOREIGN KEY(userid) REFERENCES users(id)
);

-- CATEGORY
CREATE TABLE IF NOT EXISTS category(
    id INTEGER NOT NULL,
    name NVARCHAR(32) NOT NULL,
    FOREIGN KEY (id) REFERENCES posts(id) ON DELETE CASCADE
);

-- POST COMMENTS
CREATE TABLE IF NOT EXISTS comments(
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    content TEXT NOT NULL,
    userid INTEGER NOT NULL,
    postid INTEGER NOT NULL,
    FOREIGN KEY(userid) REFERENCES users(id),
    FOREIGN KEY(postid) REFERENCES posts(id) ON DELETE CASCADE
);

-- POST EVALUATION
CREATE TABLE IF NOT EXISTS posts_evaluate(
    vote INTEGER NOT NULL,
    userid INTEGER NOT NULL,
    postid INTEGER NOT NULL,
    FOREIGN KEY(userid) REFERENCES users(id),
    FOREIGN KEY(postid) REFERENCES posts(id) ON DELETE CASCADE
);

-- COMMENT EVALUATION
CREATE TABLE IF NOT EXISTS comments_evaluate(
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    vote INTEGER NOT NULL,
    userid INTEGER NOT NULL,
    commentid INTEGER NOT NULL,
    FOREIGN KEY(userid) REFERENCES users(id),
    FOREIGN KEY(commentid) REFERENCES comments(id) ON DELETE CASCADE
);